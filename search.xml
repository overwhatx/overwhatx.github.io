<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试2</title>
      <link href="2021/03/05/blog-js-3/"/>
      <url>2021/03/05/blog-js-3/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;  #文章标题</span><br><span class="line">date: &#123;&#123; date &#125;&#125;    #文件创建时间</span><br><span class="line">author:             #文章作者</span><br><span class="line">img: 直接填链接      #文章封面图</span><br><span class="line">coverImg:直接填链接  #当本文章在首页轮播时需要显示的图片</span><br><span class="line">top: false          #文章是否置顶</span><br><span class="line">cover: false        #表示该文章是否需要加入到首页轮播封面中</span><br><span class="line">toc: true           #约束</span><br><span class="line">mathjax: false      #是否开启数学公式支持</span><br><span class="line">password:           #设置阅读文章验证密码 不填写默认没有</span><br><span class="line">summary:            #自定义的文章摘要内容 不填写则为文章首内容 </span><br><span class="line">categories:         #文章分类 只能写一个</span><br><span class="line">tags:               #文章标签 能写多个</span><br><span class="line">    -文章标签1</span><br><span class="line">    -文章标签2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Markdow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试</title>
      <link href="2021/03/05/blog-js-2/"/>
      <url>2021/03/05/blog-js-2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;  #文章标题</span><br><span class="line">date: &#123;&#123; date &#125;&#125;    #文件创建时间</span><br><span class="line">author:             #文章作者</span><br><span class="line">img: 直接填链接      #文章封面图</span><br><span class="line">coverImg:直接填链接  #当本文章在首页轮播时需要显示的图片</span><br><span class="line">top: false          #文章是否置顶</span><br><span class="line">cover: false        #表示该文章是否需要加入到首页轮播封面中</span><br><span class="line">toc: true           #约束</span><br><span class="line">mathjax: false      #是否开启数学公式支持</span><br><span class="line">password:           #设置阅读文章验证密码 不填写默认没有</span><br><span class="line">summary:            #自定义的文章摘要内容 不填写则为文章首内容 </span><br><span class="line">categories:         #文章分类 只能写一个</span><br><span class="line">tags:               #文章标签 能写多个</span><br><span class="line">    -文章标签1</span><br><span class="line">    -文章标签2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Markdow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog</title>
      <link href="2021/02/17/blog-1/"/>
      <url>2021/02/17/blog-1/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Markdow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdow的使用-（基础）</title>
      <link href="2021/02/17/blog/"/>
      <url>2021/02/17/blog/</url>
      
        <content type="html"><![CDATA[<h1 id="markdow的基础用法："><a href="#markdow的基础用法：" class="headerlink" title="markdow的基础用法："></a>markdow的基础用法：</h1><h2 id="图片引入方法"><a href="#图片引入方法" class="headerlink" title="图片引入方法"></a>图片引入方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![图片描述](填写图片url) 图片描述可以不写</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/02/17/txgbKumXaOGApSU.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Markdow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Date对象方法-练习</title>
      <link href="2021/02/02/blog-js-1/"/>
      <url>2021/02/02/blog-js-1/</url>
      
        <content type="html"><![CDATA[<ol><li>编写一个函数，用于返回一个利于阅读的日期字符串格式   年 - 月 - 日 时: 分: 秒<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function Time(date) &#123;</span><br><span class="line">           var year &#x3D; date.getFullYear().toString().padStart(4, 0);</span><br><span class="line">           var month &#x3D; date.getMonth().toString().padStart(2, 0);</span><br><span class="line">           var day &#x3D; date.getDate().toString().padStart(2, 0);</span><br><span class="line">           var hours &#x3D; date.getHours().toString().padStart(2, 0);</span><br><span class="line">           var minutes &#x3D; date.getMinutes().toString().padStart(2, 0);</span><br><span class="line">           var seconds &#x3D; date.getSeconds().toString().padStart(2, 0);</span><br><span class="line">           return &#96;$&#123;year&#125;-$&#123;month&#125;-$&#123;day&#125; $&#123;hours&#125;:$&#123;minutes&#125;:$&#123;seconds&#125;&#96;</span><br><span class="line">       &#125;;</span><br><span class="line">       console.log(Time(new Date()));</span><br></pre></td></tr></table></figure></li><li>生日倒计时 计算用户当下距离生日时日天数 如果已过则计算明年的<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">function getDaysToBirthday(month, day) &#123;</span><br><span class="line">           var now &#x3D; new Date();</span><br><span class="line">           var thisYear &#x3D; now.getFullYear();  &#x2F;&#x2F;调用函数获取当前年份并赋值给thisYear</span><br><span class="line">           &#x2F;&#x2F; 用户今年的生日日期</span><br><span class="line">           var birthday &#x3D; new Date(thisYear, month - 1, day);</span><br><span class="line"></span><br><span class="line">           if (birthday &lt; now) &#123;   &#x2F;&#x2F; 判断今年的生日是否已过 已过则计算明年的生日</span><br><span class="line">               birthday.setFullYear(now.getFullYear() + 1);</span><br><span class="line">           &#125;</span><br><span class="line">           var timeDec &#x3D; birthday - now;   &#x2F;&#x2F;用户生日减当前的日期得到毫秒</span><br><span class="line">           var days &#x3D; timeDec &#x2F; (24 * 60 * 60 * 1000)</span><br><span class="line">           return Math.ceil(days) &#x2F;&#x2F;向上取整 不足一天为一天</span><br><span class="line">       &#125;</span><br><span class="line">       console.log(getDaysToBirthday(6, 26));</span><br></pre></td></tr></table></figure></li><li>根据系统当前的月份，输出这一个月每一天的星期<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">function print() &#123;</span><br><span class="line">    var now &#x3D; new Date();</span><br><span class="line">    var y &#x3D; now.getFullYear(); &#x2F;&#x2F;将当前年份赋值给y</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 使用巧妙的方法判断闰平年间接判断月份天数 这里没有调用判断闰平年</span><br><span class="line">    &#x2F;&#x2F; 方法：将得到的当前月加1 然后天数设置为0 这就等于上个月的最后一天 从而得知这个月有多少天</span><br><span class="line">    var m &#x3D; now.getMonth() + 1; &#x2F;&#x2F;将当前获取到的月份加1并赋值给m</span><br><span class="line"></span><br><span class="line">    var days &#x3D; new Date(y, m, 0).getDate();   &#x2F;&#x2F;含义年为y月为m日为零传给getDate()</span><br><span class="line">    &#x2F;&#x2F; console.log(y, m, days);  &#x2F;&#x2F;当前结果2021 3 31</span><br><span class="line">    for (var i &#x3D; 1; i &lt;&#x3D; days; i++) &#123;</span><br><span class="line">        &#x2F;&#x2F; console.log(&#96;$&#123;y&#125;年$&#123;m&#125;月$&#123;i&#125;日:星期$&#123;new Date(y, m - 1, i).getDay()&#125;&#96;);</span><br><span class="line">        console.log(&#96;$&#123;y&#125;年$&#123;m&#125;月$&#123;i&#125;日：星期$&#123;getDayOfWeek(y, m, i)&#125;&#96;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">function getDayOfWeek(year, month, day) &#123;</span><br><span class="line">    var d &#x3D; new Date(year, month - 1, day);</span><br><span class="line">    var day &#x3D; d.getDay(); &#x2F;&#x2F;得到星期</span><br><span class="line">    &#x2F;&#x2F; 进行匹配</span><br><span class="line">    switch (day) &#123;</span><br><span class="line">        case 0:</span><br><span class="line">            return &quot;日&quot;;</span><br><span class="line">        case 1:</span><br><span class="line">            return &quot;一&quot;;</span><br><span class="line">        case 2:</span><br><span class="line">            return &quot;二&quot;;</span><br><span class="line">        case 3:</span><br><span class="line">            return &quot;三&quot;;</span><br><span class="line">        case 4:</span><br><span class="line">            return &quot;四&quot;;</span><br><span class="line">        case 5:</span><br><span class="line">            return &quot;五&quot;;</span><br><span class="line">        case 6:</span><br><span class="line">            return &quot;六&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">print();</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Date </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Date对象方法</title>
      <link href="2021/02/02/blog-js/"/>
      <url>2021/02/02/blog-js/</url>
      
        <content type="html"><![CDATA[<h1 id="Date对象方法"><a href="#Date对象方法" class="headerlink" title="Date对象方法"></a>Date对象方法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 注意月是从0开始的 星期天也是0</span><br><span class="line">        var d &#x3D; new Date();</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 从 Date 对象以四位数字返回年份</span><br><span class="line">        console.log(d.getFullYear());</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 从 Date 对象返回月份(0 ~11) </span><br><span class="line">        console.log(d.getMonth());</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 从 Date 对象返回一个月中的某一天(1 ~31) 无闰平年判断</span><br><span class="line">        console.log(d.getDate());</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 从 Date 对象返回一周中的某一天 (0 ~ 6) 0为星期天</span><br><span class="line">        console.log(d.getDay());</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 返回 Date 对象的小时(0 ~23) </span><br><span class="line">        console.log(d.getHours());</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 返回 Date 对象的分钟(0 ~59) </span><br><span class="line">        console.log(d.getMinutes());</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 返回 Date 对象的秒数(0 ~59) </span><br><span class="line">        console.log(d.getSeconds());</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 返回 Date 对象的毫秒(0 ~999) </span><br><span class="line">        console.log(d.getMilliseconds());</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 得到时间戳 返回 1970 年 1 月 1 日至今的毫秒数</span><br><span class="line">        console.log(d.getTime());</span><br></pre></td></tr></table></figure><h2 id="格林威治时间-UTC"><a href="#格林威治时间-UTC" class="headerlink" title="格林威治时间 UTC"></a>格林威治时间 UTC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 加UTC表示：格林威治时间 年时分秒 同理</span><br><span class="line">console.log(d.getUTCDate());</span><br><span class="line">console.log(d.getUTCFullYear());</span><br><span class="line">console.log(d.getUTCMonth());</span><br></pre></td></tr></table></figure><h2 id="自定义时间-set"><a href="#自定义时间-set" class="headerlink" title="自定义时间 set"></a>自定义时间 set</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var p &#x3D; new Date();</span><br><span class="line">&#x2F;&#x2F; 加set表示：设置时间 年时分秒 同理</span><br><span class="line">&#x2F;&#x2F; console.log(p.setDate(10));  &#x2F;&#x2F;得到新时间</span><br><span class="line">&#x2F;&#x2F; console.log(p);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 设置年份 在此同时也可以设置月和天</span><br><span class="line">&#x2F;&#x2F; console.log(p.setFullYear(2020, 0, 1));</span><br><span class="line">&#x2F;&#x2F; console.log(p);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 设置概览</span><br><span class="line">console.log(p.setFullYear(2020));   &#x2F;&#x2F;年</span><br><span class="line">console.log(p.setMonth(3)); &#x2F;&#x2F;月</span><br><span class="line">console.log(p.setDate(4));  &#x2F;&#x2F;日</span><br><span class="line">console.log(p.setHours(12));  &#x2F;&#x2F;时</span><br><span class="line">console.log(p.setMinutes(40));  &#x2F;&#x2F;分</span><br><span class="line">console.log(p.setSeconds(35));    &#x2F;&#x2F;秒</span><br><span class="line">console.log(p.setMilliseconds(200));    &#x2F;&#x2F;毫秒</span><br><span class="line">console.log(p);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 把 Date 对象转换为字符串</span><br><span class="line">console.log(p.toString());</span><br><span class="line">&#x2F;&#x2F; 把 Date 对象的时间部分转换为字符串</span><br><span class="line">console.log(p.toTimeString());</span><br><span class="line">&#x2F;&#x2F; 把 Date 对象的日期部分转换为字符串</span><br><span class="line">console.log(p.toDateString());</span><br><span class="line">&#x2F;&#x2F; 根据本地时间格式，把 Date 对象的时间部分转</span><br><span class="line">console.log(p.toLocaleString());</span><br><span class="line">&#x2F;&#x2F; 根据本地时间格式，把 Date 对象的日期部分转换为字符串</span><br><span class="line">console.log(p.toLocaleDateString());</span><br><span class="line">&#x2F;&#x2F; 使用 ISO 标准返回字符串的日期格式</span><br><span class="line">console.log(p.toISOString());</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/03/02/OjCM1YSFZkN3URc.jpg" alt="IU"></p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Date </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>firstBlog</title>
      <link href="2020/03/05/firstBlog/"/>
      <url>2020/03/05/firstBlog/</url>
      
        <content type="html"><![CDATA[<h1 id="抒写第一篇博客"><a href="#抒写第一篇博客" class="headerlink" title="抒写第一篇博客"></a>抒写第一篇博客</h1><h2 id="新建文章模板含义"><a href="#新建文章模板含义" class="headerlink" title="新建文章模板含义:"></a>新建文章模板含义:</h2><p>title: firstBlog  #文章标题<br>date: 1583387521000    #文件创建时间<br>author:             #文章作者<br>img: 直接填链接      #文章封面图<br>coverImg:直接填链接  #当本文章在首页轮播时需要显示的图片<br>top: false          #文章是否置顶<br>cover: false        #表示该文章是否需要加入到首页轮播封面中<br>toc: true           #约束<br>mathjax: false      #是否开启数学公式支持<br>password:           #设置阅读文章验证密码 不填写默认没有<br>summary:            #自定义的文章摘要内容 不填写则为文章首内容<br>categories:         #文章分类 只能写一个<br>tags:               #文章标签 能写多个<br>    -文章标签1<br>    -文章标签2</p><h2 id="第一篇Blog的诞生"><a href="#第一篇Blog的诞生" class="headerlink" title="第一篇Blog的诞生:"></a>第一篇Blog的诞生:</h2><p>在只学过小部分web基础上搭建了这个小破站，中途还是有些吃力，太多没有接触的知识、原理，庆幸还可以面向百度面向大佬<br>如果没有这些大佬的解惑和超时空的问答，大概我已经暂时放弃了，待到知识备全在重新开始。<br>最后经过三两天的奋战还是如愿以偿，这一刻无比激动，这一刻让我感受到了编程的多巴胺，这一刻我明白程序员为什么会猝死<br>这一刻我也松了一口气，事实证明我的编程能力也不是很差劲，我能完成或许只是因为付出了比那些大佬多几倍的时间，我只是死磕完成的，换个小白或许也比我快，但至少我实现了。<br>实现了Blog的搭建和部署，从而也学会和理解了很多零散的知识点，对以后或许没有太大作用但不积跬步何以至千里？</p><p><img src="https://i.loli.net/2021/02/17/txgbKumXaOGApSU.jpg"><br><strong>谢同学或许会偶尔怀疑自己的能力，但谢同学永远坚信明天会更好</strong></p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
            <tag> Markdow </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
